package internal

import "math/rand"

const (
	storeAndFwdFlag = iota
	taxiType
	vendorId
	passengerCount
	ratecodeid
	pulocationid
	dolocationid
	paymentType
	tripType

	tripDistance = iota
	fareAmount
	extra
	mtaTax
	tipAmount
	tollsAmount
	improvementSurcharge
	totalAmount
	congestionSurcharge
	airportFee
	tripDuration
	averageSpeed
)

// Discrete variables
type Category[T any] struct {
	Name  T
	Count int
}

type DiscreteVariable[T any] struct {
	Name       string
	Categories []Category[T]
}

func (ds DiscreteVariable[T]) WeightedRandomSelection() T {
	totalWeight := 0
	for _, cat := range ds.Categories {
		totalWeight += cat.Count
	}

	randNum := rand.Intn(totalWeight)
	weight := 0
	for _, cat := range ds.Categories {
		weight += cat.Count
		if randNum < weight {
			return cat.Name
		}
	}
	// this should never happen
	panic("failed to make a weighted selection")
}

// Continuous Variables
type ContinuousVariable struct {
	Name              string
	Mean              float64
	StandardDeviation float64
}

// just going to assume a normal distribution without checking
func (cv ContinuousVariable) GenNormRand() float64 {
	for {
		a := rand.NormFloat64()*cv.StandardDeviation + cv.Mean
		if a >= 0 {
			return a
		}
	}
}

var (
	// continuous vars
	Taxi_Continuous = []ContinuousVariable{
		tripDistance: {"trip_distance", 4.561061582, 320.779580296},
		fareAmount: {"fare_amount", 19.288329935, 77.166477342},
		extra: {"extra", 1.443473051, 2.570667415},
		mtaTax: {"mta_tax", 0.484853086, 0.1282570439},
		tipAmount: {"tip_amount", 3.397782578, 4.135729393},
		tollsAmount: {"tolls_amount", 0.5663756198, 2.22072533},
		improvementSurcharge: {"improvement_surcharge", 0.9748470777, 0.2183084192},
		totalAmount: {"total_amount", 27.998728544, 78.562281268},
		congestionSurcharge: {"congestion_surcharge", 2.231187282, 0.854774907},
		airportFee: {"airport_fee", 0.1433030035, 0.4910461818},
		tripDuration: {"trip_duration", 16.543790277, 5121.56034909},
		averageSpeed: {"average_speed", 16.265050132, 1894.674166019},
	}

	vendorIdCat = []Category[int]{
		{1, 7484864},
		{2, 22934804},
		{6, 3465},
	}

	// discrete categories
	passengerCountCat = []Category[int]{
		{0, 359863},
		{1, 21620064},
		{2, 4157107},
		{3, 964983},
		{4, 568541},
		{5, 333181},
		{6, 214725},
		{7, 89},
		{8, 244},
		{9, 66},
		{-1, 2204270},
	}

	rateCodeIdCat = []Category[int]{
		{1, 26543337},
		{2, 1044389},
		{3, 91721},
		{4, 63287},
		{5, 215226},
		{6, 56},
		{99, 260847},
		{-1, 2204270},
	}

	storeAndFwdFlagCat = []Category[string]{
		{"N", 28068433},
		{"Y", 150430},
		{"null", 2204270},
	}

	puLocationIdCat = []Category[int]{
		{1, 3760},
		{2, 35},
		{3, 1102},
		{4, 45656},
		{5, 4},
		{6, 239},
		{7, 30422},
		{8, 152},
		{9, 639},
		{10, 10291},
		{11, 718},
		{12, 11107},
		{13, 175558},
		{14, 3704},
		{15, 468},
		{16, 746},
		{17, 7160},
		{18, 1813},
		{19, 1133},
		{20, 1264},
		{21, 1342},
		{22, 1785},
		{23, 82},
		{24, 81130},
		{25, 17012},
		{26, 2154},
		{27, 47},
		{28, 3893},
		{29, 1894},
		{30, 51},
		{31, 234},
		{32, 1373},
		{33, 22631},
		{34, 1185},
		{35, 5774},
		{36, 4136},
		{37, 6758},
		{38, 1349},
		{39, 7095},
		{40, 4948},
		{41, 103523},
		{42, 47424},
		{43, 509279},
		{44, 9},
		{45, 43578},
		{46, 124},
		{47, 2021},
		{48, 765366},
		{49, 7475},
		{50, 186175},
		{51, 4216},
		{52, 7546},
		{53, 830},
		{54, 973},
		{55, 4865},
		{56, 2973},
		{57, 201},
		{58, 78},
		{59, 63},
		{60, 1275},
		{61, 13610},
		{62, 4473},
		{63, 1742},
		{64, 456},
		{65, 35917},
		{66, 18300},
		{67, 891},
		{68, 800819},
		{69, 4205},
		{70, 126851},
		{71, 4129},
		{72, 5160},
		{73, 434},
		{74, 187077},
		{75, 257203},
		{76, 9506},
		{77, 2253},
		{78, 2334},
		{79, 703577},
		{80, 11686},
		{81, 1325},
		{82, 31201},
		{83, 6769},
		{84, 9},
		{85, 2666},
		{86, 2474},
		{87, 156582},
		{88, 85106},
		{89, 7497},
		{90, 481278},
		{91, 4934},
		{92, 7632},
		{93, 10274},
		{94, 1037},
		{95, 32978},
		{96, 156},
		{97, 30649},
		{98, 742},
		{99, 2},
		{100, 466209},
		{101, 625},
		{102, 1173},
		{105, 6},
		{106, 2180},
		{107, 612166},
		{108, 1256},
		{109, 15},
		{110, 1},
		{111, 39},
		{112, 9568},
		{113, 428208},
		{114, 420740},
		{115, 50},
		{116, 29215},
		{117, 2380},
		{118, 53},
		{119, 2338},
		{120, 195},
		{121, 2213},
		{122, 1123},
		{123, 1672},
		{124, 1567},
		{125, 150765},
		{126, 1451},
		{127, 3306},
		{128, 302},
		{129, 20849},
		{130, 20114},
		{131, 1948},
		{132, 1405422},
		{133, 1735},
		{134, 9555},
		{135, 1632},
		{136, 1571},
		{137, 317353},
		{138, 966864},
		{139, 1542},
		{140, 591334},
		{141, 694814},
		{142, 998489},
		{143, 334625},
		{144, 287221},
		{145, 30770},
		{146, 15186},
		{147, 1307},
		{148, 317486},
		{149, 1225},
		{150, 878},
		{151, 238977},
		{152, 23780},
		{153, 480},
		{154, 499},
		{155, 2275},
		{156, 30},
		{157, 4903},
		{158, 278546},
		{159, 3916},
		{160, 1382},
		{161, 1391831},
		{162, 1043526},
		{163, 869008},
		{164, 683682},
		{165, 2507},
		{166, 174905},
		{167, 2722},
		{168, 7847},
		{169, 2418},
		{170, 854987},
		{171, 906},
		{172, 37},
		{173, 1510},
		{174, 1685},
		{175, 658},
		{176, 19},
		{177, 4077},
		{178, 616},
		{179, 7585},
		{180, 1093},
		{181, 14729},
		{182, 2678},
		{183, 649},
		{184, 91},
		{185, 1323},
		{186, 981243},
		{187, 24},
		{188, 8389},
		{189, 4621},
		{190, 874},
		{191, 3178},
		{192, 743},
		{193, 22603},
		{194, 1232},
		{195, 6213},
		{196, 5437},
		{197, 5546},
		{198, 2448},
		{199, 14},
		{200, 1068},
		{201, 681},
		{202, 1887},
		{203, 1639},
		{204, 10},
		{205, 3490},
		{206, 59},
		{207, 2526},
		{208, 1419},
		{209, 58106},
		{210, 3818},
		{211, 233338},
		{212, 1669},
		{213, 3472},
		{214, 75},
		{215, 6039},
		{216, 8517},
		{217, 1726},
		{218, 3391},
		{219, 4137},
		{220, 1778},
		{221, 79},
		{222, 2787},
		{223, 10669},
		{224, 42000},
		{225, 6806},
		{226, 25966},
		{227, 1085},
		{228, 3022},
		{229, 543736},
		{230, 1002753},
		{231, 406773},
		{232, 43020},
		{233, 355180},
		{234, 798734},
		{235, 2858},
		{236, 1308573},
		{237, 1421585},
		{238, 595975},
		{239, 853846},
		{240, 191},
		{241, 1882},
		{242, 2293},
		{243, 7707},
		{244, 34492},
		{245, 27},
		{246, 520645},
		{247, 4759},
		{248, 1629},
		{249, 691713},
		{250, 1454},
		{251, 36},
		{252, 785},
		{253, 302},
		{254, 2707},
		{255, 17075},
		{256, 13241},
		{257, 1014},
		{258, 1858},
		{259, 1360},
		{260, 16538},
		{261, 154830},
		{262, 414837},
		{263, 566619},
		{264, 149364},
		{265, 19533},
	}

	doLocationIdCat = []Category[int]{
		{1, 85323},
		{2, 63},
		{3, 2567},
		{4, 119053},
		{5, 129},
		{6, 753},
		{7, 81528},
		{8, 474},
		{9, 3329},
		{10, 27369},
		{11, 2127},
		{12, 16543},
		{13, 222052},
		{14, 20029},
		{15, 3673},
		{16, 5521},
		{17, 33086},
		{18, 4267},
		{19, 4107},
		{20, 3645},
		{21, 3711},
		{22, 5078},
		{23, 653},
		{24, 103195},
		{25, 49824},
		{26, 8702},
		{27, 567},
		{28, 13797},
		{29, 4651},
		{30, 319},
		{31, 1582},
		{32, 2620},
		{33, 76479},
		{34, 3722},
		{35, 8446},
		{36, 19145},
		{37, 30585},
		{38, 5875},
		{39, 13697},
		{40, 26427},
		{41, 194097},
		{42, 133259},
		{43, 361844},
		{44, 131},
		{45, 81400},
		{46, 736},
		{47, 3720},
		{48, 723914},
		{49, 43869},
		{50, 318615},
		{51, 5675},
		{52, 19945},
		{53, 4875},
		{54, 7040},
		{55, 7071},
		{56, 11009},
		{57, 686},
		{58, 765},
		{59, 181},
		{60, 2343},
		{61, 46925},
		{62, 14245},
		{63, 5686},
		{64, 3635},
		{65, 44869},
		{66, 39157},
		{67, 4181},
		{68, 773282},
		{69, 10838},
		{70, 17712},
		{71, 7945},
		{72, 8945},
		{73, 2518},
		{74, 223902},
		{75, 373045},
		{76, 17723},
		{77, 4343},
		{78, 3934},
		{79, 618275},
		{80, 37249},
		{81, 2574},
		{82, 24710},
		{83, 10441},
		{84, 253},
		{85, 6314},
		{86, 5582},
		{87, 231008},
		{88, 113538},
		{89, 26492},
		{90, 437224},
		{91, 8921},
		{92, 22199},
		{93, 11045},
		{94, 2147},
		{95, 47907},
		{96, 1202},
		{97, 41637},
		{98, 4450},
		{99, 8},
		{100, 395024},
		{101, 2910},
		{102, 6615},
		{105, 13},
		{106, 9959},
		{107, 584163},
		{108, 2650},
		{109, 282},
		{110, 1},
		{111, 285},
		{112, 62483},
		{113, 394052},
		{114, 298986},
		{115, 349},
		{116, 75669},
		{117, 3829},
		{118, 589},
		{119, 5632},
		{120, 1825},
		{121, 8958},
		{122, 2970},
		{123, 5598},
		{124, 6863},
		{125, 153239},
		{126, 3418},
		{127, 23892},
		{128, 2494},
		{129, 49026},
		{130, 20372},
		{131, 7127},
		{132, 356767},
		{133, 8247},
		{134, 13507},
		{135, 10612},
		{136, 3779},
		{137, 372852},
		{138, 384476},
		{139, 5863},
		{140, 606500},
		{141, 795683},
		{142, 858142},
		{143, 447961},
		{144, 282727},
		{145, 80185},
		{146, 25039},
		{147, 2737},
		{148, 310420},
		{149, 4422},
		{150, 2879},
		{151, 280667},
		{152, 47813},
		{153, 1381},
		{154, 2349},
		{155, 7121},
		{156, 348},
		{157, 11893},
		{158, 297628},
		{159, 8131},
		{160, 11006},
		{161, 1141003},
		{162, 851085},
		{163, 741389},
		{164, 640684},
		{165, 7984},
		{166, 232912},
		{167, 4905},
		{168, 18280},
		{169, 5176},
		{170, 875663},
		{171, 5786},
		{172, 314},
		{173, 7587},
		{174, 4206},
		{175, 3333},
		{176, 209},
		{177, 8744},
		{178, 2616},
		{179, 28996},
		{180, 3958},
		{181, 79933},
		{182, 4021},
		{183, 1437},
		{184, 266},
		{185, 3631},
		{186, 648295},
		{187, 237},
		{188, 25055},
		{189, 27617},
		{190, 4318},
		{191, 8281},
		{192, 3408},
		{193, 27556},
		{194, 4041},
		{195, 13073},
		{196, 13141},
		{197, 15023},
		{198, 16744},
		{200, 9911},
		{201, 3181},
		{202, 17091},
		{203, 6263},
		{204, 123},
		{205, 10947},
		{206, 624},
		{207, 2468},
		{208, 4615},
		{209, 86084},
		{210, 6450},
		{211, 252020},
		{212, 3012},
		{213, 5976},
		{214, 529},
		{215, 10279},
		{216, 31676},
		{217, 11552},
		{218, 8244},
		{219, 12794},
		{220, 11649},
		{221, 584},
		{222, 3693},
		{223, 41744},
		{224, 118704},
		{225, 27128},
		{226, 51534},
		{227, 5873},
		{228, 14763},
		{229, 625507},
		{230, 925075},
		{231, 473405},
		{232, 144503},
		{233, 448774},
		{234, 698478},
		{235, 5051},
		{236, 1377924},
		{237, 1295995},
		{238, 698387},
		{239, 860496},
		{240, 941},
		{241, 4793},
		{242, 5377},
		{243, 58729},
		{244, 98336},
		{245, 358},
		{246, 592950},
		{247, 10127},
		{248, 2829},
		{249, 522199},
		{250, 2948},
		{251, 416},
		{252, 5791},
		{253, 437},
		{254, 5098},
		{255, 70765},
		{256, 61765},
		{257, 12489},
		{258, 8211},
		{259, 3463},
		{260, 25628},
		{261, 148261},
		{262, 464681},
		{263, 626734},
		{264, 207614},
		{265, 125823},
	}

	paymentTypeCat = []Category[int]{
		{0, 2173036},
		{1, 23045098},
		{2, 4514321},
		{3, 194836},
		{4, 464594},
		{5, 14},
		{-1, 31234},
	}

	taxiTypeCat = []Category[string]{
		{"green", 544947},
		{"yellow", 29878186},
	}
	monthCat = []Category[int]{
		{1, 3021196},
		{2, 3061110},
		{3, 3640062},
		{4, 3570768},
		{5, 3784795},
		{6, 15},
		{8, 52},
		{9, 2912164},
		{10, 3588455},
		{11, 3403744},
		{12, 3440772},
	}
	tripTypeCat = []Category[int]{
		{-1, 29878186 + 31282},
		{1, 493524},
		{2, 20141},
	}

	Taxi_DiscreteStr = [...]DiscreteVariable[string]{
		storeAndFwdFlag: {"store_and_fwd_flag", storeAndFwdFlagCat},
		taxiType:        {"taxi_type", taxiTypeCat},
	}
	Taxi_DiscreteInt = [...]DiscreteVariable[int]{
		vendorId:       {"vendor_id", vendorIdCat},
		passengerCount: {"passenger_count", passengerCountCat},
		ratecodeid:     {"ratecodeid", rateCodeIdCat},
		pulocationid:   {"pulocationid", puLocationIdCat},
		dolocationid:   {"dolocationid", doLocationIdCat},
		paymentType:    {"payment_type", paymentTypeCat},
		tripType:       {"trip_type", tripTypeCat},
	}
)

